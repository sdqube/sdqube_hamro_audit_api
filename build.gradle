plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'distribution'
    id 'application'
}
apply plugin: 'distribution'

group = 'com.sdqube'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8
def sl4jVersion = '1.7.25'

//def mainClass = 'com.sdqube.hamroaudit.HamroAuditApplication'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR7")
}

dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
//    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.cloud:spring-cloud-stream'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
    implementation 'org.apache.kafka:kafka-streams'
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.kafka:spring-kafka'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk
    compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.842'

    compile group: 'org.slf4j', name: 'slf4j-api', version: sl4jVersion
    runtime group: 'org.slf4j', name: 'log4j-over-slf4j', version: sl4jVersion

    compile 'io.jsonwebtoken:jjwt:0.9.0'
    compile 'org.glassfish.jaxb:jaxb-runtime:2.4.0-b180830.0438'

//    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
//    testImplementation 'org.springframework.kafka:spring-kafka-test'
//    testImplementation 'org.springframework.security:spring-security-test'
}
// disable generating zip file along with tar.gz
distZip.enabled = false

// define suffix for the result file (e.g.: srv-myservice-1.0.6-SNAPSHOT-distribution.tar.gz)
distTar {
    classifier = 'distribution'
}

distributions {
    main {
        baseName = 'srv-' + project.name.toLowerCase()
        contents {
            into('/') { // Copy runnable jar into the distribution archive
                from 'build/libs'
            }
            into('/config') { // Copy configuration files to config subfolder
                from 'src/main/resources'
                exclude("**/*dev.yml") // exclude the development related yml files
            }
        }
    }
}
// generate compressed tar.gz distribution file
plugins.withType(DistributionPlugin) {
    distTar {
        compression = Compression.GZIP
        extension = 'tar.gz'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}
